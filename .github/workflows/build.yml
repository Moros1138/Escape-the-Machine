name: Build

on:
  push:
  pull_request:
    branches:
      - develop
      - main

jobs:
  emscripten:
    name: Emscripten
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up Python (required for Emscripten)
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Emscripten SDK
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          source ./emsdk_env.sh
        shell: bash

      - name: Build
        run: |
          source emsdk/emsdk_env.sh
          emcmake cmake . -B build
          cmake --build build --config=Release
        shell: bash
      
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Escape-the-Machine.Web
          path: build/bin/*

  ubuntu:
    name: Ubuntu
    runs-on: ubuntu-24.04
  
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zlib1g-dev libpng-dev libx11-dev libgl1-mesa-dev libglu1-mesa-dev

      - name: Set default gcc and g++ versions to latest
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 100
            
      - name: Build
        env:
          CC: gcc
          CXX: g++
        run: |
          cmake . -B build
          cmake --build build --config=Release
        shell: bash
      
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Escape-the-Machine.Ubuntu
          path: build/bin/*
  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      
      - name: Build
        run: |
          cmake -DHAS_TERMINAL=OFF . -B build 
          cmake --build build --config=Release
        shell: pwsh

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Escape-the-Machine.Windows
          path: build/bin/*
  release:
    name: Release
    needs: [emscripten, ubuntu, windows]  
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      
      - name: Download Emscripten Artifact
        uses: actions/download-artifact@v4
        with:
          name: Escape-the-Machine.Web
          path: artifacts/

      - name: Download Ubuntu Artifact
        uses: actions/download-artifact@v4
        with:
          name: Escape-the-Machine.Ubuntu
          path: artifacts/

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: Escape-the-Machine.Windows
          path: artifacts/
      
      - name: Get commit SHA
        id: commit
        run: echo "COMMIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
      
      - name: Delete existing latest release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete latest --yes || true
        continue-on-error: true

      - name: Create or Update Latest Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create latest \
            --title "Latest Release" \
            --notes "Latest release with artifacts from commit ${{ env.COMMIT_SHA }}." \
            --draft=false \
            --prerelease=false \
            --target ${{ github.sha }} \
            artifacts/Escape-the-Machine.Ubuntu \
            artifacts/Escape-the-Machine.Web \
            artifacts/Escape-the-Machine.Windows
